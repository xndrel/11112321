import telebot

from telebot import types

bot = telebot.TeleBot('7095549792:AAFqExmSpSVjBUmjZOLswciPuE7YZbwpG-U')

@bot.message_handler(commands=['start'])
def welcome(message):
    photo = open('fishka1.jpg', 'rb')
    bot.send_photo(message.chat.id, photo, caption="–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n\n–Ø –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø–æ–º–æ—á—å —Ç–µ–±–µ –Ω–∞—É—á–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä–Ω—ã–º —Ñ–∏—à–∫–∞–º Dead by Daylight.".format(message.from_user, bot.get_me()),parse_mode='html', reply_markup=markup)
    

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üå´Ô∏è –õ–µ—Å—Ç –≥–æ—É")

    markup.add(item1)
    

    
    
@bot.message_handler(func=lambda message: message.text == "üå´Ô∏è –í—ã–±—Ä–∞—Ç—å")
def handle_lest_go(message):

    markup = types.InlineKeyboardMarkup(row_width=1)

    features = [
        ("–∫—Ä–∞—É—á —Ç–µ–∫"),
        ("–ó–∞—â–∏—Ç–∞ –æ—Ç —Å–Ω–æ—É–±–æ–ª–∞"),
        ("–†–∞–¥–∏ –õ—é–¥–µ–π/FTP"),
        ("–°–±—Ä–æ—Å bloodlust"),
        ("–ë–∞–π—Ç –≥–∏–±—Å–∫–æ—Å—Ç—å."),
        ("–ù–µ–≤–∏–¥–∏–º—ã–π —Å—Ç–∞–Ω"),
        ("—à–∫–∞—Ñ—Å—Ç–∞–Ω"),
        ("–û–±—Ä–∞—Ç–Ω—ã–π –ø—Ä—ã–∂–æ–∫"),
        ("–ë–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–±–∏–ª–∫–∏"),
        ("100% –ø–æ–±–µ–≥ –≤ —Å–æ–ª–æ"),
        ("–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω –ø–æ —Ç–∞–π–º–∏–Ω–≥—É"),
        ("–û—Ç–≤–æ–¥ –Ω–∞ –∫–æ—Ä—Ä–∞–ø—Ç"),
        ("–ë–µ–≥–∞—Ç—å –ø–æ —Ç–µ—Ä—Ä–æ—Ä—É"),
        ("–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –†–µ—Å–µ—Ç"),
        ("–ü–∞–¥–µ–Ω–∏–µ –≤ —É–≥–æ–ª"),
        ("–ü–µ—Ä–µ–±—Ä–æ—Å –æ–±—Å–µ—à–Ω–∞"),
        ("–ê–±—É–∑ —Ö–∞–π–≥—Ä–∞—É–Ω–¥–∞"),
        ("–°–±—Ä–æ—Å –∞–±–∏–ª–∫–∏ –æ–Ω–∏"),
    ]

    for feature in features:
        feature_name, video_file, feature_text = feature
        button = types.InlineKeyboardButton(feature_name, callback_data=f"feature_{video_file}_{feature_text}")
        markup.add(button)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç—É—Ä–Ω–∏—Ä–Ω—ã–µ —Ñ–∏—à–∫–∏:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('feature_'))
def handle_feature_button(call):
    
    _, video_file, feature_text = call.data.split('_')

    
    video = open(video_file, 'rb')
    bot.send_video(call.message.chat.id, video, caption=feature_text)
    video.close()

bot.polling(none_stop=True)

            
